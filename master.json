{"meta":{"generator":"0.9.0","format":20,"date":1596536671612},"custom":null,"classes":[{"name":"DisTube","description":"Class representing a DisTube.","extends":[[["EventEmitter"]]],"construct":{"name":"DisTube","description":"Create new DisTube.","params":[{"name":"client","description":"Discord.JS client","type":[[["DiscordClient"]]]},{"name":"otp","description":"Custom DisTube options","optional":true,"default":"{}","type":[[["DisTubeOptions"]]]}]},"props":[{"name":"client","description":"Discord.JS client","type":[[["DiscordClient"]]],"meta":{"line":109,"file":"DisTube.js","path":"src"}},{"name":"guildQueues","description":"Collection of guild queues","type":[[["Map","<"],["string",", "],["Queue",">"]]],"meta":{"line":115,"file":"DisTube.js","path":"src"}},{"name":"options","description":"DisTube options","type":[[["DisTubeOptions"]]],"meta":{"line":121,"file":"DisTube.js","path":"src"}},{"name":"version","description":"`@2.2.4` DisTube's current version.","scope":"static","readonly":true,"type":[[["string"]]],"meta":{"line":88,"file":"DisTube.js","path":"src"}}],"methods":[{"name":"_resolveSong","description":"Resolve a Song","access":"private","params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"song","description":"`Youtube url`|`Search string`|`{@link DisTube#Song}`","type":[[["string"]],[["Song"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Song",">"]]],"description":"Resolved Song"},"meta":{"line":153,"file":"DisTube.js","path":"src"}},{"name":"play","description":"Play / add a song from Youtube video url or playlist from Youtube playlist url. Search and play a song if it is not a valid url.","examples":["client.on('message', (message) => {\r    if (!message.content.startsWith(config.prefix)) return;\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\r    const command = args.shift();\r    if (command == \"play\")\r        distube.play(message, args.join(\" \"));\r});"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"song","description":"`Youtube url`|`Search string`|`{@link DisTube#Song}`","type":[[["string"]],[["Song"]]]}],"async":true,"meta":{"line":190,"file":"DisTube.js","path":"src"}},{"name":"playSkip","description":"`@2.0.0` Skip the playing song and play a song or a playlist","examples":["client.on('message', (message) => {\r    if (!message.content.startsWith(config.prefix)) return;\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\r    const command = args.shift();\r    if (command == \"playSkip\")\r        distube.playSkip(message, args.join(\" \"));\r});"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"song","description":"`Youtube url`|`Search string`|`{@link DisTube#Song}`","type":[[["string"]],[["Song"]]]}],"async":true,"meta":{"line":217,"file":"DisTube.js","path":"src"}},{"name":"playCustomPlaylist","description":"`@2.1.0` Play or add array of Youtube video urls.\r`{@link DisTube#event:playList}` or `{@link DisTube#event:addList}` will be emitted\rwith `playlist`'s properties include `properties` parameter's properties,\r`user`, `items`, `total_items`, `duration`, `formattedDuration`, `thumbnail` like `{@link ytpl_result}`","examples":["let songs = [\"https://www.youtube.com/watch?v=xxx\", \"https://www.youtube.com/watch?v=yyy\"];\r    distube.playCustomPlaylist(message, songs, { title: \"My playlist name\" });"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"urls","description":"Array of Youtube url","type":[[["Array","<"],["string",">"]]]},{"name":"properties","description":"Additional properties such as `title`","optional":true,"default":"{}","type":[[["object"]]]},{"name":"playSkip","description":"Weather or not play this playlist instantly","optional":true,"default":false,"type":[[["boolean"]]]}],"async":true,"meta":{"line":244,"file":"DisTube.js","path":"src"}},{"name":"_handlePlaylist","description":"PLay / add a playlist","access":"private","params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"arg2","description":"Youtube playlist url","type":[[["string"]],[["object"]]]}],"async":true,"meta":{"line":275,"file":"DisTube.js","path":"src"}},{"name":"search","description":"`@2.0.0` Search for a song. You can customize how user answers instead of send a number\r(default of `{@link DisTube#play}()` search when `searchSongs` is `true`).\rThen use `{@link DisTube#play}(message, aResultToPlay)` or `{@link DisTube#playSkip}()` to play it.","params":[{"name":"string","description":"The string search for","type":[[["string"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["Song",">>"]]],"description":"Array of results"},"meta":{"line":316,"file":"DisTube.js","path":"src"}},{"name":"_searchSong","description":"Search for a song, fire {@link DisTube#event:error} if not found.","access":"private","params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"name","description":"The string search for","type":[[["string"]]]}],"async":true,"returns":{"types":[[["Song"]]],"description":"Song info"},"meta":{"line":336,"file":"DisTube.js","path":"src"}},{"name":"_newQueue","description":"Create a new guild queue","access":"private","params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"video","description":"Song to play","type":[[["ytdlvideoInfo"]]]}],"async":true,"returns":[[["Promise","<"],["Queue",">"]]],"meta":{"line":375,"file":"DisTube.js","path":"src"}},{"name":"_deleteQueue","description":"Delete a guild queue","access":"private","params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]}],"meta":{"line":397,"file":"DisTube.js","path":"src"}},{"name":"getQueue","description":"Get the guild queue","examples":["client.on('message', (message) => {\r    if (!message.content.startsWith(config.prefix)) return;\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\r    const command = args.shift();\r    if (command == \"queue\") {\r        let queue = distube.getQueue(message);\r        message.channel.send('Current queue:\\n' + queue.songs.map((song, id) =>\r            `**${id+1}**. [${song.name}](${song.url}) - \\`${song.formattedDuration}\\``\r        ).join(\"\\n\"));\r    }\r});"],"params":[{"name":"message","description":"The message from guild channel5643","type":[[["DiscordMessage"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":418,"file":"DisTube.js","path":"src"}},{"name":"_addToQueue","description":"Add a video to queue","access":"private","params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"song","description":"Song to add","type":[[["Song"]]]}],"returns":[[["Queue"]]],"meta":{"line":433,"file":"DisTube.js","path":"src"}},{"name":"_addVideosToQueue","description":"Add a array of videos to queue","access":"private","params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"videos","description":"Array of song to add","type":[[["Array","<"],["ytdlvideoInfo",">"]]]}],"returns":[[["Queue"]]],"meta":{"line":453,"file":"DisTube.js","path":"src"}},{"name":"pause","description":"Pause the guild stream","params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":471,"file":"DisTube.js","path":"src"}},{"name":"resume","description":"Resume the guild stream","params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":486,"file":"DisTube.js","path":"src"}},{"name":"stop","description":"Stop the guild stream","examples":["client.on('message', (message) => {\r    if (!message.content.startsWith(config.prefix)) return;\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\r    const command = args.shift();\r    if (command == \"stop\") {\r        distube.stop(message);\r        message.channel.send(\"Stopped the queue!\");\r    }\r});"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]}],"meta":{"line":510,"file":"DisTube.js","path":"src"}},{"name":"setVolume","description":"Set the guild stream's volume","examples":["client.on('message', (message) => {\r    if (!message.content.startsWith(config.prefix)) return;\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\r    const command = args.shift();\r    if (command == \"volume\")\r        distube.setVolume(message, args[0]);\r});"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"percent","description":"The percentage of volume you want to set","type":[[["number"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":534,"file":"DisTube.js","path":"src"}},{"name":"skip","description":"Skip the playing song","examples":["client.on('message', (message) => {\r    if (!message.content.startsWith(config.prefix)) return;\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\r    const command = args.shift();\r    if (command == \"skip\")\r        distube.skip(message);\r});"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":558,"file":"DisTube.js","path":"src"}},{"name":"shuffle","description":"Shuffle the guild queue songs","examples":["client.on('message', (message) => {\r    if (!message.content.startsWith(config.prefix)) return;\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\r    const command = args.shift();\r    if (command == \"shuffle\")\r        distube.shuffle(message);\r});"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":580,"file":"DisTube.js","path":"src"}},{"name":"jump","description":"Jump to the song number in the queue.\rThe next one is 1,...","examples":["client.on('message', (message) => {\r    if (!message.content.startsWith(config.prefix)) return;\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\r    const command = args.shift();\r    if (command == \"jump\")\r        distube.jump(message, parseInt(args[0]))\r            .catch(err => message.channel.send(\"Invalid song number.\"));\r});"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"num","description":"The song number to play","type":[[["number"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":609,"file":"DisTube.js","path":"src"}},{"name":"setRepeatMode","description":"Set the repeat mode of the guild queue.\rTurn off if repeat mode is the same value as new mode.\rToggle mode: `mode = null` `(0 -> 1 -> 2 -> 0...)`","examples":["client.on('message', (message) => {\r    if (!message.content.startsWith(config.prefix)) return;\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\r    const command = args.shift();\r    if (command == \"repeat\") {\r        let mode = distube.setRepeatMode(message, parseInt(args[0]));\r        mode = mode ? mode == 2 ? \"Repeat queue\" : \"Repeat song\" : \"Off\";\r        message.channel.send(\"Set repeat mode to `\" + mode + \"`\");\r    }\r});"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"mode","description":"The repeat modes `(0: disabled, 1: Repeat a song, 2: Repeat all the queue)`","default":null,"type":[[["number"]]]}],"returns":{"types":[[["number"]]],"description":"The new repeat mode"},"meta":{"line":640,"file":"DisTube.js","path":"src"}},{"name":"toggleAutoplay","description":"Toggle autoplay mode","examples":["client.on('message', (message) => {\r    if (!message.content.startsWith(config.prefix)) return;\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\r    const command = args.shift();\r    if (command == \"autoplay\") {\r        let mode = distube.toggleAutoplay(message);\r        message.channel.send(\"Set autoplay mode to `\" + (mode ? \"On\" : \"Off\") + \"`\");\r    }\r});"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]}],"returns":{"types":[[["boolean"]]],"description":"Autoplay mode state"},"meta":{"line":666,"file":"DisTube.js","path":"src"}},{"name":"isPlaying","description":"Whether or not a guild is playing or paused music.","params":[{"name":"message","description":"The message from guild channel to check","type":[[["DiscordMessage"]]]}],"returns":{"types":[[["boolean"]]],"description":"Whether or not the guild is playing song(s)"},"meta":{"line":678,"file":"DisTube.js","path":"src"}},{"name":"isPaused","description":"Whether or not the guild queue is paused","params":[{"name":"message","description":"The message from guild channel to check","type":[[["DiscordMessage"]]]}],"returns":{"types":[[["boolean"]]],"description":"Whether or not the guild queue is paused"},"meta":{"line":689,"file":"DisTube.js","path":"src"}},{"name":"_isVoiceChannelEmpty","description":"Whether or not the queue's voice channel is empty","access":"private","params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]}],"returns":{"types":[[["boolean"]]],"description":"No user in voice channel return `true`"},"meta":{"line":702,"file":"DisTube.js","path":"src"}},{"name":"runAutoplay","description":"Add related song to the queue","params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Queue",">"]]],"description":"The guild queue"},"meta":{"line":714,"file":"DisTube.js","path":"src"}},{"name":"setFilter","description":"`@2.0.0` Enable or disable a filter of the queue, replay the playing song.\rAvailable filters: {@link Filter}","examples":["client.on('message', (message) => {\r    if (!message.content.startsWith(config.prefix)) return;\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\r    const command = args.shift();\r    if ([`3d`, `bassboost`, `echo`, `karaoke`, `nightcore`, `vaporwave`].includes(command)) {\r        let filter = distube.setFilter(message, command);\r        message.channel.send(\"Current queue filter: \" + (filter || \"Off\"));\r    }\r});"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"filter","description":"A filter name","type":[[["Filter"]]]}],"returns":{"types":[[["string"]]],"description":"Current queue's filter name."},"meta":{"line":753,"file":"DisTube.js","path":"src"}},{"name":"_playSong","description":"Play a song on voice connection","access":"private","params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]}],"async":true,"meta":{"line":786,"file":"DisTube.js","path":"src"}}],"events":[{"name":"addList","description":"Emitted after DisTube add playlist to guild queue","examples":["const status = (queue) => `Volume: \\`${queue.volume}%\\` | Loop: \\`${queue.repeatMode ? queue.repeatMode == 2 ? \"Server Queue\" : \"This Song\" : \"Off\"}\\` | Autoplay: \\`${queue.autoplay ? \"On\" : \"Off\"}\\``;\rdistube.on(\"addList\", (message, queue, playlist) => message.channel.send(\r    `Added \\`${playlist.title}\\` playlist (${playlist.total_items} songs) to queue\\n${status(queue)}`\r));"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"queue","description":"The guild queue","type":[[["Queue"]]]},{"name":"playlist","description":"Playlist info","type":[[["ytpl_result"]]]}],"meta":{"line":886,"file":"DisTube.js","path":"src"}},{"name":"addSong","description":"Emitted after DisTube add new song to guild queue","examples":["const status = (queue) => `Volume: \\`${queue.volume}%\\` | Loop: \\`${queue.repeatMode ? queue.repeatMode == 2 ? \"Server Queue\" : \"This Song\" : \"Off\"}\\` | Autoplay: \\`${queue.autoplay ? \"On\" : \"Off\"}\\``;\rdistube.on(\"addSong\", (message, queue, song) => message.channel.send(\r    `Added ${song.name} - \\`${song.formattedDuration}\\` to the queue by ${song.user}`\r));"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"queue","description":"The guild queue","type":[[["Queue"]]]},{"name":"song","description":"Added song","type":[[["Song"]]]}],"meta":{"line":901,"file":"DisTube.js","path":"src"}},{"name":"empty","description":"Emitted when there is no user in VoiceChannel and `{@link DisTubeOptions}.leaveOnEmpty` is `true`.","examples":["distube.on(\"empty\", message => message.channel.send(\"Channel is empty. Leaving the channel\"))"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]}],"meta":{"line":915,"file":"DisTube.js","path":"src"}},{"name":"error","description":"Emitted when `{@link DisTube}` encounters an error.","examples":["distube.on(\"error\", (message, err) => message.channel.send(\r    \"An error encountered: \" + err\r));"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"err","description":"The error encountered","type":[[["Error"]]]}],"meta":{"line":924,"file":"DisTube.js","path":"src"}},{"name":"finish","description":"Emitted when there is no more song in the queue and {@link Queue#autoplay} is `false`.\rDisTube will leave voice channel if `{@link DisTubeOptions}.leaveOnFinish` is `true`","examples":["distube.on(\"finish\", message => message.channel.send(\"No more song in queue\"));"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]}],"meta":{"line":936,"file":"DisTube.js","path":"src"}},{"name":"initQueue","description":"`@2.3.0` Emitted when DisTube initialize a queue to change queue default properties.","examples":["distube.on(\"initQueue\", queue => {\r    queue.autoplay = false;\r    queue.volume = 100;\r});"],"params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]}],"meta":{"line":946,"file":"DisTube.js","path":"src"}},{"name":"noRelated","description":"Emitted when `{@link Queue#autoplay}` is `true`, the `{@link Queue#songs}` is empty and\rDisTube cannot find related songs to play","examples":["distube.on(\"noRelated\", message => message.channel.send(\"Can't find related video to play. Stop playing music.\"));"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]}],"meta":{"line":958,"file":"DisTube.js","path":"src"}},{"name":"playList","description":"Emitted after DisTube play the first song of the playlist\rand add the rest to the guild queue","examples":["const status = (queue) => `Volume: \\`${queue.volume}%\\` | Loop: \\`${queue.repeatMode ? queue.repeatMode == 2 ? \"Server Queue\" : \"This Song\" : \"Off\"}\\` | Autoplay: \\`${queue.autoplay ? \"On\" : \"Off\"}\\``;\rdistube.on(\"playList\", (message, queue, playlist, song) => message.channel.send(\r    `Play \\`${playlist.title}\\` playlist (${playlist.total_items} songs).\\nRequested by: ${song.user}\\nNow playing \\`${song.name}\\` - \\`${song.formattedDuration}\\`\\n${status(queue)}`\r));"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"queue","description":"The guild queue","type":[[["Queue"]]]},{"name":"playlist","description":"Playlist info","type":[[["ytpl_result"]]]},{"name":"song","description":"Playing song","type":[[["Song"]]]}],"meta":{"line":968,"file":"DisTube.js","path":"src"}},{"name":"playSong","description":"Emitted when DisTube play a song.\rIf `{@link DisTubeOptions}.emitNewSongOnly` is `true`, event is not emitted when looping a song or next song is the previous one","examples":["const status = (queue) => `Volume: \\`${queue.volume}%\\` | Loop: \\`${queue.repeatMode ? queue.repeatMode == 2 ? \"Server Queue\" : \"This Song\" : \"Off\"}\\` | Autoplay: \\`${queue.autoplay ? \"On\" : \"Off\"}\\``;\rdistube.on(\"playSong\", (message, queue, song) => message.channel.send(\r    `Playing \\`${song.name}\\` - \\`${song.formattedDuration}\\`\\nRequested by: ${song.user}\\n${status(queue)}`\r));"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"queue","description":"The guild queue","type":[[["Queue"]]]},{"name":"song","description":"Playing song","type":[[["Song"]]]}],"meta":{"line":984,"file":"DisTube.js","path":"src"}},{"name":"searchCancel","description":"Emitted when `{@link DisTubeOptions}.searchSongs` is `true`.\rSearch will be canceled if user's next message is invalid number or timeout (60s)","examples":["// DisTubeOptions.searchSongs = true\rdistube.on(\"searchCancel\", (message) => message.channel.send(`Searching canceled`));"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]}],"meta":{"line":999,"file":"DisTube.js","path":"src"}},{"name":"searchResult","description":"Emitted when `{@link DisTubeOptions}.searchSongs` is `true`.\rDisTube will wait for user's next message to choose song manually\rif song param of {@link DisTube#play}() is invalid url","examples":["// DisTubeOptions.searchSongs = true\rdistube.on(\"searchResult\", (message, result) => {\r    let i = 0;\r    message.channel.send(`**Choose an option from below**\\n${result.map(song => `**${++i}**. ${song.title} - \\`${song.duration}\\``).join(\"\\n\")}\\n*Enter anything else or wait 60 seconds to cancel*`);\r});"],"params":[{"name":"message","description":"The message from guild channel","type":[[["DiscordMessage"]]]},{"name":"result","description":"Searched result (max length = 12)","type":[[["Array","<"],["Song",">"]]]}],"meta":{"line":1010,"file":"DisTube.js","path":"src"}}],"meta":{"line":101,"file":"DisTube.js","path":"src"}},{"name":"Queue","description":"Represents a queue.","construct":{"name":"Queue","description":"Create a queue."},"props":[{"name":"dispatcher","description":"Stream dispatcher.","type":[[["DiscordStreamDispatcher"]]],"meta":{"line":15,"file":"Queue.js","path":"src"}},{"name":"connection","description":"Voice connection.","type":[[["DiscordVoiceConnection"]]],"meta":{"line":20,"file":"Queue.js","path":"src"}},{"name":"volume","description":"Stream volume.","type":[[["number"]]],"meta":{"line":25,"file":"Queue.js","path":"src"}},{"name":"songs","description":"List of songs","type":[[["Array","<"],["Song",">"]]],"meta":{"line":30,"file":"Queue.js","path":"src"}},{"name":"duration","description":"Queue's duration.","type":[[["Number"]]],"meta":{"line":35,"file":"Queue.js","path":"src"}},{"name":"formattedDuration","description":"Formatted duration string.","type":[[["string"]]],"meta":{"line":40,"file":"Queue.js","path":"src"}},{"name":"stopped","description":"Whether stream is currently stopped.","type":[[["boolean"]]],"meta":{"line":45,"file":"Queue.js","path":"src"}},{"name":"skipped","description":"Whether or not the last song was skipped.","type":[[["boolean"]]],"meta":{"line":50,"file":"Queue.js","path":"src"}},{"name":"playing","description":"Whether or not the stream is currently playing.","type":[[["boolean"]]],"meta":{"line":55,"file":"Queue.js","path":"src"}},{"name":"pause","description":"Whether or not the stream is currently paused.","type":[[["boolean"]]],"meta":{"line":60,"file":"Queue.js","path":"src"}},{"name":"repeatMode","description":"Type of repeat mode (0 is disabled, 1 is repeating a song, 2 is repeating all the playlist)","type":[[["number"]]],"meta":{"line":65,"file":"Queue.js","path":"src"}},{"name":"autoplay","description":"Whether or not the autoplay mode is enabled.","type":[[["boolean"]]],"meta":{"line":70,"file":"Queue.js","path":"src"}},{"name":"filter","description":"`@2.0.0` Queue audio filter.\rAvailable filters: `3d`, `bassboost`, `echo`, `karaoke`, `nightcore`, `vaporwave`","type":[[["string"]]],"meta":{"line":76,"file":"Queue.js","path":"src"}},{"name":"initMessage","description":"`@2.2.0` Message which initialize the queue","type":[[["DiscordMessage"]]],"meta":{"line":81,"file":"Queue.js","path":"src"}}],"meta":{"line":10,"file":"Queue.js","path":"src"}},{"name":"Song","description":"Class representing a song.","construct":{"name":"Song","description":"Create a song.","params":[{"name":"video","description":"Youtube video info","type":[[["ytdlvideoInfo"]],[["DisTubeytpl_item"]]]},{"name":"user","description":"Requested user","type":[[["DiscordUser"]]]}]},"props":[{"name":"user","description":"User requested","type":[[["DiscordUser"]]],"meta":{"line":20,"file":"Song.js","path":"src"}},{"name":"id","description":"`@2.1.4` Youtube video id","type":[[["string"]]],"meta":{"line":25,"file":"Song.js","path":"src"}},{"name":"name","description":"Song name aka video title.","type":[[["string"]]],"meta":{"line":30,"file":"Song.js","path":"src"}},{"name":"duration","description":"Song duration.","type":[[["number"]]],"meta":{"line":35,"file":"Song.js","path":"src"}},{"name":"formattedDuration","description":"Formatted duration string `hh:mm:ss`.","type":[[["string"]]],"meta":{"line":40,"file":"Song.js","path":"src"}},{"name":"url","description":"Video URL.","type":[[["string"]]],"meta":{"line":45,"file":"Song.js","path":"src"}},{"name":"thumbnail","description":"Video thumbnail.","type":[[["string"]]],"meta":{"line":50,"file":"Song.js","path":"src"}},{"name":"related","description":"Related videos (for autoplay mode)","type":[[["Array","<"],["ytdlrelatedVideo",">"]]],"meta":{"line":55,"file":"Song.js","path":"src"}}],"meta":{"line":15,"file":"Song.js","path":"src"}}],"interfaces":[],"typedefs":[{"name":"ytpl_author","description":"Youtube playlist author","type":[[["object"]]],"props":[{"name":"id","description":"Channel id","type":[[["string"]]]},{"name":"name","description":"Channel name","type":[[["string"]]]},{"name":"avatar","description":"Channel avatar","type":[[["string"]]]},{"name":"channel_url","description":"Channel url","type":[[["string"]]]},{"name":"user","description":"User id","type":[[["string"]]]},{"name":"user_url","description":"User url","type":[[["string"]]]}],"meta":{"line":847,"file":"DisTube.js","path":"src"}},{"name":"ytpl_item","description":"Youtube playlist item","type":[[["object"]]],"props":[{"name":"id","description":"Video id","type":[[["string"]]]},{"name":"url","description":"Video url","type":[[["string"]]]},{"name":"url_simple","description":"Video shorten url","type":[[["string"]]]},{"name":"title","description":"Video title","type":[[["string"]]]},{"name":"thumbnail","description":"Video thumbnail url","type":[[["string"]]]},{"name":"formattedDuration","description":"Video duration `hh:mm:ss`","type":[[["string"]]]},{"name":"duration","description":"Video duration in seconds","type":[[["number"]]]},{"name":"author","description":"Video channel","type":[[["ytpl_author"]]]}],"meta":{"line":858,"file":"DisTube.js","path":"src"}},{"name":"ytpl_result","description":"Youtube playlist info","type":[[["object"]]],"props":[{"name":"user","description":"`@1.2.0` Requested user","type":[[["DiscordUser"]]]},{"name":"id","description":"Playlist id","type":[[["string"]]]},{"name":"url","description":"Playlist url","type":[[["string"]]]},{"name":"title","description":"Playlist title","type":[[["string"]]]},{"name":"thumbnail","description":"`@2.1.0` Playlist thumbnail url","type":[[["string"]]]},{"name":"formattedDuration","description":"Playlist duration `hh:mm:ss`","type":[[["string"]]]},{"name":"duration","description":"Playlist duration in seconds","type":[[["number"]]]},{"name":"total_items","description":"The number of videos in the playlist","type":[[["number"]]]},{"name":"author","description":"The playlist creator","type":[[["ytpl_author"]]]},{"name":"items","description":"Array of videos","type":[[["Array","<"],["ytpl_item",">"]]]}],"meta":{"line":871,"file":"DisTube.js","path":"src"}},{"name":"DisTubeOptions","description":"DisTube options.","type":[[["object"]]],"props":[{"name":"emitNewSongOnly","description":"`@1.3.0`. If `true`, {@link DisTube#event:playSong} is not emitted when looping a song or next song is the same as the previous one","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"highWaterMark","description":"`@2.2.0` ytdl's highWaterMark option.","optional":true,"default":"1<<24","type":[[["number"]]]},{"name":"leaveOnEmpty","description":"Whether or not leaving voice channel if channel is empty when finish the current song. (Avoid accident leaving)","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"leaveOnFinish","description":"Whether or not leaving voice channel when the queue ends.","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"leaveOnStop","description":"Whether or not leaving voice channel after using DisTube.stop() function.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"searchSongs","description":"Whether or not searching for multiple songs to select manually, DisTube will play the first result if `false`","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"youtubeCookie","description":"`@2.4.0` Youtube cookie to prevent rate limit (Error 429). You must fill `youtubeIdentityToken` if you use this. You can get your YouTube cookie by navigating to YouTube in a web browser, opening up dev tools, and typing \"document.cookie\" in the console","optional":true,"default":null,"type":[[["string"]]]},{"name":"youtubeIdentityToken","description":"`@2.4.0`","optional":true,"default":null,"type":[[["string"]]]}],"meta":{"line":28,"file":"DisTube.js","path":"src"}},{"name":"Filter","description":"DisTube audio filters.","type":[[["string"]]],"props":[{"name":"3d","description":"`@2.0.0`","type":[[["string"]]]},{"name":"bassboost","description":"`@2.0.0`","type":[[["string"]]]},{"name":"echo","description":"`@2.0.0`","type":[[["string"]]]},{"name":"flanger","description":"`@2.4.0`","type":[[["string"]]]},{"name":"gate","description":"`@2.4.0`","type":[[["string"]]]},{"name":"haas","description":"`@2.4.0`","type":[[["string"]]]},{"name":"karaoke","description":"`@2.0.0`","type":[[["string"]]]},{"name":"nightcore","description":"`@2.0.0`","type":[[["string"]]]},{"name":"reverse","description":"`@2.4.0`","type":[[["string"]]]},{"name":"vaporwave","description":"`@2.0.0`","type":[[["string"]]]}],"meta":{"line":51,"file":"DisTube.js","path":"src"}}],"externals":[]}